import "../../Fastfile"

android_firebase_app_id = "1:305132849030:android:6cf0cd5ec064fad3ffce07"

# Update fastlane
update_fastlane

default_platform(:android)

platform :android do
  lane :build_apk do
    # Reuse parent fastfile tasks
    fetch_dependencies
    build_autogenerated_code

    # Build and set CI build number if CI
    if is_ci
      sh_on_root(command: "flutter build apk --release --build-number $BUILD_NUMBER")
    else
      sh_on_root(command: "flutter build apk --release")
    end
  end

  lane :deploy_apk do
    build_apk

    # Distribute to Firebase
    firebase_app_distribution(
      app: android_firebase_app_id,
      release_notes: ENV['RELEASE_NOTES'],
      service_credentials_file: ENV['FIREBASE_JSON'],
      groups: "Testers",
      android_artifact_type: "APK",
      android_artifact_path: "#{root_path}/build/app/outputs/flutter-apk/app-release.apk"
    )
  end

  lane :update_release_url do
    firebase_app_distribution_get_latest_release(
      app: android_firebase_app_id,
      service_credentials_file: ENV['FIREBASE_JSON']
    )

    release_name = Actions.lane_context[:FIREBASE_APP_DISTRO_LATEST_RELEASE][:name]
    release_url = get_firebase_release_url(release_name, android_firebase_app_id)

    update_pr_and_jira(release_url: release_url, ios: false)
  end
end

