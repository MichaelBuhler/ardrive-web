import "../../Fastfile"

ios_firebase_app_id = "1:305132849030:ios:06ea33a95a2e0d42ffce07"

# Update fastlane
update_fastlane

default_platform(:ios)

platform :ios do
  lane :build_adhoc do
    # Setup keychain if CI
    setup_ci if is_ci

    # Download and install adhoc certificate and profile
    match(
      type: "adhoc",
      app_identifier: "io.ardrive.app"
    )

    # Flutter build
    fetch_dependencies
    build_autogenerated_code

    # Pod install
    sh("bundle", "exec", "pod", "install")

    # Set CI build number if CI
    if is_ci
      increment_build_number(
        build_number: ENV['BUILD_NUMBER']
      )
    end

    # Build iOS project and generate an ad-hoc signed ipa
    build_ios_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      include_bitcode: true,
      export_method: "ad-hoc",
      clean: true,
    )
  end

  lane :deploy_adhoc do
    build_adhoc

    # Distribute to Firebase
    firebase_app_distribution(
      app: ios_firebase_app_id,
      release_notes: ENV['RELEASE_NOTES'],
      service_credentials_file: ENV['FIREBASE_JSON'],
      groups: "Testers"
    )
  end

  lane :update_release_url do
    firebase_app_distribution_get_latest_release(
      app: ios_firebase_app_id,
      service_credentials_file: ENV['FIREBASE_JSON']
    )

    release_name = Actions.lane_context[:FIREBASE_APP_DISTRO_LATEST_RELEASE][:name]
    release_url = get_firebase_release_url(release_name, ios_firebase_app_id)

    update_pr_and_jira(release_url: release_url, ios: true)
  end
end
